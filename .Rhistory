a_matrix <- c_matrix %*% t(solve(Sigma_bar)) # Calculation of all a for the BLUP
X_hat_kriging <- a_matrix %*% y
krig_stats <- X_hat_kriging %>%
melt()
krig_stats
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma_bar)) # Draw of observed y with sigma_N = 0
c_matrix <- Sigma[, 1:3] # Represents Cov(Y, X_0) for all X_0 in D
a_matrix <- c_matrix %*% t(solve(Sigma_bar)) # Calculation of all a for the BLUP
X_hat_kriging <- a_matrix %*% y
krig_stats <- X_hat_kriging %>%
melt()
krig_stats
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma_bar)) # Draw of observed y with sigma_N = 0
c_matrix <- Sigma[, 1:3] # Represents Cov(Y, X_0) for all X_0 in D
a_matrix <- c_matrix %*% t(solve(Sigma_bar)) # Calculation of all a for the BLUP
X_hat_kriging <- a_matrix %*% y
krig_stats <- X_hat_kriging %>%
melt()
krig_stats
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma_bar)) # Draw of observed y with sigma_N = 0
c_matrix <- Sigma[, 1:3] # Represents Cov(Y, X_0) for all X_0 in D
a_matrix <- c_matrix %*% t(solve(Sigma_bar)) # Calculation of all a for the BLUP
X_hat_kriging <- a_matrix %*% y
krig_stats <- X_hat_kriging %>%
melt()
krig_stats
?set.seed
knitr::opts_chunk$set(echo = TRUE, cache=TRUE)
# install.packages("geoR")
# install.packages("akima")
# install.packages("fields")
# install.packages("ggplot2")
# install.packages("MASS")
# install.packages("reshape2")
# install.packages("patchwork")
# install.packages("glue")
# install.packages("tidyverse")
# install.packages("latex2exp")
library(geoR)
library(akima)
library(fields)
library(ggplot2)
library(MASS)
library(reshape2)
library(patchwork)
library(glue)
library(tidyverse)
library(latex2exp)
melted_cond_sim <- cond_sim %>%
melt() %>%
group_by(Var1, Var2) %>%
summarize(mean_est=mean(value), CI90_est=1.64*sqrt(1+var(value))/10) %>%
nest(-Var1)
head(melted_cond_sim$data[1])
knitr::opts_chunk$set(echo = TRUE, cache=TRUE)
# install.packages("geoR")
# install.packages("akima")
# install.packages("fields")
# install.packages("ggplot2")
# install.packages("MASS")
# install.packages("reshape2")
# install.packages("patchwork")
# install.packages("glue")
# install.packages("tidyverse")
# install.packages("latex2exp")
library(geoR)
library(akima)
library(fields)
library(ggplot2)
library(MASS)
library(reshape2)
library(patchwork)
library(glue)
library(tidyverse)
library(latex2exp)
powered_exponential <- function(h, a, alpha) {
# Powered exponential correlation function as defined in lectures
return(
exp(-(h/a)^alpha)
)
}
matern_modified <- function(h, a, nu) {
# Matern correlation function as defined in lectures (based on matern from geoR)
phi <- a/sqrt(8*nu)
return(
matern(h, phi, nu)
)
}
s <- c(1:50)
N <- 4
variance <- c(1, 5)
array_dims <- c(4, 4, length(s)) # Dimensions of the data-array to be plotted
dist_matrix <- as.matrix(dist(s, diag=TRUE, upper=TRUE))
mu <- rep(0, length(s))
plot_realizations <- function(realizations) {
plot <- do.call(wrap_plots, lapply(1:4, function(i) { # Using patchwork to create subplots using `wrap_plots`
df <- realizations %>% melt %>% filter(Var1 == i)   # Converts the 3D array into a dataframe and filters on i
ggplot(df) + geom_line(aes(Var3, value, group=Var2, color=factor(Var2))) +
xlab("s") + labs(title=glue("Case {i}"), color="")
}))
return(plot)
}
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
plot_realizations(exp_realizations)
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
plot_realizations(matern_realizations)
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
Sigma_bar <- Sigma_star[, 1:3]
array_dims <- c(50, 4)
cond_sim <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(sigma_N)) {
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma_bar + sigma_N[i]*identity(3)))
inv_mat <- solve(Sigma_bar + sigma_N[i]*identity(3))
cond_mu <-  t(Sigma_star) %*% inv_mat %*% y
cond_Sigma <- Sigma - t(Sigma_star) %*% inv_mat %*% Sigma_star
cond_sim[, i] <- mvrnorm(n=1, cond_mu, cond_Sigma)
cond_sim[, i+2] <- diag(cond_Sigma)
}
z <- 1.64 # z-value for a confidence interval of level 0.10
cond_sim <- as.data.frame(cond_sim)
colnames(cond_sim) <- c("Rel1", "Rel2", "Rel1_95", "Rel2_95")
cond_sim$s <- s
cond_sim$Rel1_95 <- sqrt(cond_sim$Rel1_95)*z
cond_sim$Rel2_95 <- sqrt(cond_sim$Rel2_95)*z
head(cond_sim)
p1 <- ggplot(cond_sim) +
geom_line(aes(s, Rel1)) +
geom_ribbon(aes(x=s, ymin=Rel1-Rel1_95, ymax=Rel1+Rel1_95), alpha=0.25) +
ylab("Realization 1") + labs(title=TeX(glue("$\\sigma_N^2 = {sigma_N[1]}$")))
p2 <- ggplot(cond_sim) +
geom_line(aes(s, Rel2)) +
geom_ribbon(aes(x=s, ymin=Rel2-Rel2_95, ymax=Rel2+Rel2_95), alpha=0.25) +
ylab("Realization 2") + labs(title=TeX(glue("$\\sigma_N^2 = {sigma_N[2]}$")))
p1 + p2
estimate_cond_realization <- function(sigma_N, n) {
# Given some nugget variance, simulates conditional distribution of X
# on the given grid with observation y = (y_1, y_2, y_3).
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma_bar + sigma_N*identity(3)))
inv_mat <- solve(Sigma_bar + sigma_N*identity(3))
cond_mu <-  t(Sigma_star) %*% inv_mat %*% y
cond_Sigma <- Sigma - t(Sigma_star) %*% inv_mat %*% Sigma_star
return(mvrnorm(n=n, cond_mu, cond_Sigma))
}
array_dims <- c(2, 50, 100)
cond_sim <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(sigma_N)) {
cond_sim[i, ,] <- estimate_cond_realization(sigma_N[i], n=100)
}
melted_cond_sim <- cond_sim %>%
melt() %>%
group_by(Var1, Var2) %>%
summarize(mean_est=mean(value), CI90_est=1.64*sqrt(1+var(value))/10) %>%
nest(-Var1)
head(melted_cond_sim$data[1])
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s")
p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s")
p1 + p2
sim <- cond_sim[1, , ]
sim_stats <- sim %>%
melt() %>%
group_by(Var2) %>%
summarise(A_hat=sum((value>2)*(value-2))) %>%
summarise(A_bar=mean(A_hat), sigma_hat=sd(A_hat))
sim_stats
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma_bar)) # Draw of observed y with sigma_N = 0
c_matrix <- Sigma[, 1:3] # Represents Cov(Y, X_0) for all X_0 in D
a_matrix <- c_matrix %*% t(solve(Sigma_bar)) # Calculation of all a for the BLUP
X_hat_kriging <- a_matrix %*% y
knitr::opts_chunk$set(echo = TRUE, cache=TRUE)
# install.packages("geoR")
# install.packages("akima")
# install.packages("fields")
# install.packages("ggplot2")
# install.packages("MASS")
# install.packages("reshape2")
# install.packages("patchwork")
# install.packages("glue")
# install.packages("tidyverse")
# install.packages("latex2exp")
library(geoR)
library(akima)
library(fields)
library(ggplot2)
library(MASS)
library(reshape2)
library(patchwork)
library(glue)
library(tidyverse)
library(latex2exp)
powered_exponential <- function(h, a, alpha) {
# Powered exponential correlation function as defined in lectures
return(
exp(-(h/a)^alpha)
)
}
matern_modified <- function(h, a, nu) {
# Matern correlation function as defined in lectures (based on matern from geoR)
phi <- a/sqrt(8*nu)
return(
matern(h, phi, nu)
)
}
s <- c(1:50)
N <- 4
variance <- c(1, 5)
array_dims <- c(4, 4, length(s)) # Dimensions of the data-array to be plotted
dist_matrix <- as.matrix(dist(s, diag=TRUE, upper=TRUE))
mu <- rep(0, length(s))
plot_realizations <- function(realizations) {
plot <- do.call(wrap_plots, lapply(1:4, function(i) { # Using patchwork to create subplots using `wrap_plots`
df <- realizations %>% melt %>% filter(Var1 == i)   # Converts the 3D array into a dataframe and filters on i
ggplot(df) + geom_line(aes(Var3, value, group=Var2, color=factor(Var2))) +
xlab("s") + labs(title=glue("Case {i}"), color="")
}))
return(plot)
}
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
plot_realizations(exp_realizations)
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
plot_realizations(matern_realizations)
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
Sigma_bar <- Sigma_star[, 1:3]
array_dims <- c(50, 4)
cond_sim <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(sigma_N)) {
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma_bar + sigma_N[i]*identity(3)))
inv_mat <- solve(Sigma_bar + sigma_N[i]*identity(3))
cond_mu <-  t(Sigma_star) %*% inv_mat %*% y
cond_Sigma <- Sigma - t(Sigma_star) %*% inv_mat %*% Sigma_star
cond_sim[, i] <- mvrnorm(n=1, cond_mu, cond_Sigma)
cond_sim[, i+2] <- diag(cond_Sigma)
}
z <- 1.64 # z-value for a confidence interval of level 0.10
cond_sim <- as.data.frame(cond_sim)
colnames(cond_sim) <- c("Rel1", "Rel2", "Rel1_95", "Rel2_95")
cond_sim$s <- s
cond_sim$Rel1_95 <- sqrt(cond_sim$Rel1_95)*z
cond_sim$Rel2_95 <- sqrt(cond_sim$Rel2_95)*z
head(cond_sim)
p1 <- ggplot(cond_sim) +
geom_line(aes(s, Rel1)) +
geom_ribbon(aes(x=s, ymin=Rel1-Rel1_95, ymax=Rel1+Rel1_95), alpha=0.25) +
ylab("Realization 1") + labs(title=TeX(glue("$\\sigma_N^2 = {sigma_N[1]}$")))
p2 <- ggplot(cond_sim) +
geom_line(aes(s, Rel2)) +
geom_ribbon(aes(x=s, ymin=Rel2-Rel2_95, ymax=Rel2+Rel2_95), alpha=0.25) +
ylab("Realization 2") + labs(title=TeX(glue("$\\sigma_N^2 = {sigma_N[2]}$")))
p1 + p2
estimate_cond_realization <- function(sigma_N, n) {
# Given some nugget variance, simulates conditional distribution of X
# on the given grid with observation y = (y_1, y_2, y_3).
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma_bar + sigma_N*identity(3)))
inv_mat <- solve(Sigma_bar + sigma_N*identity(3))
cond_mu <-  t(Sigma_star) %*% inv_mat %*% y
cond_Sigma <- Sigma - t(Sigma_star) %*% inv_mat %*% Sigma_star
return(mvrnorm(n=n, cond_mu, cond_Sigma))
}
array_dims <- c(2, 50, 100)
cond_sim <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(sigma_N)) {
cond_sim[i, ,] <- estimate_cond_realization(sigma_N[i], n=100)
}
melted_cond_sim <- cond_sim %>%
melt() %>%
group_by(Var1, Var2) %>%
summarize(value=value, mean_est=mean(value), CI90_est=1.64*sqrt(1+var(value))/10) %>%
nest(-Var1)
head(melted_cond_sim$data[1])
melted_cond_sim <- cond_sim %>%
melt() %>%
group_by(Var1, Var2) %>%
mutate(mean_est=mean(value), CI90_est=1.64*sqrt(1+var(value))/10) %>%
nest(-Var1)
head(melted_cond_sim$data[1])
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est)) + geom_line(aes(x=Var3, y=value))
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s")
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est)) + geom_line(aes(x=Var3, y=value)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s")
p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s")
p1 + p2
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est)) + geom_line(aes(x=Var3, y=value)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25, group=Var2) +
xlab("s")
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est)) + geom_line(aes(x=Var3, y=value)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25, group=Var3) +
xlab("s")
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est)) + geom_line(aes(x=Var3, y=value)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est, group=Var3), alpha=0.25) +
xlab("s")
p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s")
p1 + p2
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est, group=Var3)) + geom_line(aes(x=Var3, y=value)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est, group=Var3), alpha=0.25) +
xlab("s")
p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s")
p1 + p2
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est, group=Var2)) + geom_line(aes(x=Var3, y=value)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est, group=Var2), alpha=0.25) +
xlab("s")
p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s")
p1 + p2
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est, group=Var2)) + geom_line(aes(x=Var3, y=value)) +
# geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est, group=Var2), alpha=0.25) +
xlab("s")
p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s")
p1 + p2
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est, group=Var2)) + geom_line(aes(x=Var3, y=value)) +
# geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est, group=Var2), alpha=0.25) +
xlab("s")
# p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
#   ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
#   geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
#   xlab("s")
p1
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est)) + geom_line(aes(x=Var3, y=value)) +
# geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est, group=Var2), alpha=0.25) +
xlab("s")
# p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
#   ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
#   geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
#   xlab("s")
p1
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est, group=Var3)) + geom_line(aes(x=Var3, y=value)) +
# geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est, group=Var2), alpha=0.25) +
xlab("s")
# p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
#   ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
#   geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
#   xlab("s")
p1
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=mean_est, group=Var3, color=factor(Var3))) +
geom_line(aes(x=Var3, y=value)) +
# geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est, group=Var2), alpha=0.25) +
xlab("s")
# p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
#   ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
#   geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
#   xlab("s")
p1
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=value, group=Var3, color=factor(Var3))) +
# geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est, group=Var2), alpha=0.25) +
xlab("s")
# p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
#   ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
#   geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
#   xlab("s")
p1
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=value, group=Var3, color=factor(Var3))) +
geom_line(aes(x=Var2, y=mean_est)) +
# geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est, group=Var2), alpha=0.25) +
xlab("s")
# p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
#   ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
#   geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
#   xlab("s")
p1
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=value, group=Var3, color=factor(Var3))) +
geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est, group=Var2), alpha=0.25) +
xlab("s")
# p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
#   ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
#   geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
#   xlab("s")
p1
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=value, group=Var3, color=factor(Var3))) +
geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s")
# p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
#   ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
#   geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
#   xlab("s")
p1
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=value, group=Var3, color=factor(Var3))) +
geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=Var2, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s")
# p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
#   ggplot() + geom_line(aes(x=Var2, y=mean_est)) +
#   geom_ribbon(aes(x=s, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
#   xlab("s")
p1
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=value, group=Var3, color=factor(Var3))) +
geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=Var2, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s") + labs(title=TeX(glue("$\\sigma_N^2 = {sigma_N[1]}$")))
p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
ggplot() + geom_line(aes(x=Var2, y=value, group=Var3, color=factor(Var3))) +
geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=Var2, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s") + labs(title=TeX(glue("$\\sigma_N^2 = {sigma_N[2]}$")))
p1
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=value, group=Var3, color=factor(Var3))) +
geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=Var2, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s") + labs(title=TeX(glue("$\\sigma_N^2 = {sigma_N[1]}$")))
p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
ggplot() + geom_line(aes(x=Var2, y=value, group=Var3, color=factor(Var3))) +
geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=Var2, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s") + labs(title=TeX(glue("$\\sigma_N^2 = {sigma_N[2]}$")))
p1 + p2
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=value, group=Var3, color=factor(Var3))) +
geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=Var2, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s") + labs(title=TeX(glue("$\\sigma_N^2 = {sigma_N[1]}$"))) + guides(fill="none")
p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
ggplot() + geom_line(aes(x=Var2, y=value, group=Var3, color=factor(Var3))) +
geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=Var2, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s") + labs(title=TeX(glue("$\\sigma_N^2 = {sigma_N[2]}$"))) + guides(fill="none")
p1 + p2
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=value, group=Var3, color=factor(Var3))) +
geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=Var2, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s") + labs(title=TeX(glue("$\\sigma_N^2 = {sigma_N[1]}$")))theme(legend.position="none")
p1 <- as.data.frame(melted_cond_sim$data[1]) %>%
ggplot() + geom_line(aes(x=Var2, y=value, group=Var3, color=factor(Var3))) +
geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=Var2, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s") + labs(title=TeX(glue("$\\sigma_N^2 = {sigma_N[1]}$"))) + theme(legend.position="none")
p2 <- as.data.frame(melted_cond_sim$data[2]) %>%
ggplot() + geom_line(aes(x=Var2, y=value, group=Var3, color=factor(Var3))) +
geom_line(aes(x=Var2, y=mean_est)) +
geom_ribbon(aes(x=Var2, ymin=mean_est-CI90_est, ymax=mean_est+CI90_est), alpha=0.25) +
xlab("s") + labs(title=TeX(glue("$\\sigma_N^2 = {sigma_N[2]}$"))) + theme(legend.position="none")
p1 + p2
