par(mfrow=c(2, 4))
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1])
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
?plot
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1])
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1],
main=paste("Exp with variance ", variance[i], " and alpha "))
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
?plot
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1],
main=paste("Exp with variance ", variance[i], " and alpha "))
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu_values[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Exp with variance ", variance[i], " and alpha "), cex=1)
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu_values[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Exp with variance ", variance[i], " and alpha "), cex=0.2)
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu_values[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)", cex=0.2,
main=paste("Exp with variance ", variance[i], " and alpha "))
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu_values[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
x11(width=20, height=4)
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)", cex=0.2,
main=paste("Exp with variance ", variance[i], " and alpha "))
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu_values[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
x11(width=20, height=4)
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)", cex=0.2,
main=paste("Exp with variance ", variance[i], " and alpha "))
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu_values[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
x11(width=20, height=4)
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)", cex=0.2,
main=paste("Exp with variance ", variance[i], " and alpha "))
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu_values[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
knitr::opts_chunk$set(echo = TRUE)
set.seed(42)
# install.packages("geoR")
# install.packages("akima")
# install.packages("fields")
# install.packages("ggplot2")
# install.packages("MASS")
# install.packages("reshape2")
# install.packages("patchwork")
# install.packages("glue")
library(geoR)
library(akima)
library(fields)
library(ggplot2)
library(MASS)
library(reshape2)
library(patchwork)
library(glue)
powered_exponential <- function(h, a, alpha) {
# Powered exponential correlation function as defined in lectures
return(
exp(-(h/a)^alpha)
)
}
matern_modified <- function(h, a, nu) {
# Matern correlation function as defined in lectures (based on matern from geoR)
phi <- a/sqrt(8*nu)
return(
matern(h, phi, nu)
)
}
s <- c(1:50)
N <- 4
variance <- c(1, 5)
array_dims <- c(4, 4, length(s)) # Dimensions of the data-array to be plotted
dist_matrix <- as.matrix(dist(s, diag=TRUE, upper=TRUE))
mu <- rep(0, length(s))
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
melted_exp_realizations <- melt(exp_realizations) # Converts the 3D array into a dataframe
do.call(wrap_plots, lapply(1:4, function(i) {
df <- subset(melted_exp_realizations, (Var1 == i))
ggplot(df) + geom_line(aes(Var3, value, group=Var2, color=factor(Var2))) +
xlab("s") +labs(title=glue("Case {i}"), color="")
})) -> plot
plot
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
melted_matern_realizations <- melt(matern_realizations)
do.call(wrap_plots, lapply(1:4, function(i) {
df <- subset(melted_matern_realizations, (Var1 == i))
ggplot(df) + geom_line(aes(Var3, value, group=Var2, color=factor(Var2))) +
xlab("s") + labs(title=glue("Case {i}"), color="")
})) -> plot
plot
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- sigma[1:3, ]
Sigma <- as.matrix(variance[2]*matern(dist_matrix, matern_a, nu_values[2]))
sigma_N <- c(0, 0.25)
Sigma_star <- sigma[1:3, ]
Sigma <- as.matrix(variance[2]*matern(dist_matrix, matern_a, nu_values[2]))
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
Sigma_star
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
Sigma_star
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- df(matrix(ncol=3, row=0))
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- data.frame(matrix(ncol=3, row=0))
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- data.frame(matrix(ncol=3, nrow=0))
for (i in seq_along(sigma_N)) {
cbind(glue("Var{i}") = 0, cond_sim)
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- matrix(0, nrow=2, ncol=50)
for (i in seq_along(sigma_N)) {
cond_sim[i] <- rep(0, 50)
}
cond_sim
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- matrix(0, nrow=2, ncol=50)
for (i in seq_along(sigma_N)) {
y <- mvrnorm(rep(0, 3), Sigma[1:3, 1:3] + sigma_N[i]*identity(3))
cond_mu <- sigma_N[i] * Sigma_star.T %*% y
cond_Sigma <- Sigma - sigma_N[i] * Sigma_star.T %*% Sigma_star
cond_sim[i] <- rmvnorm()
}
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- matrix(0, nrow=2, ncol=50)
for (i in seq_along(sigma_N)) {
y <- mvrnorm(1, rep(0, 3), Sigma[1:3, 1:3] + sigma_N[i]*identity(3))
cond_mu <- sigma_N[i] * Sigma_star.T %*% y
cond_Sigma <- Sigma - sigma_N[i] * Sigma_star.T %*% Sigma_star
cond_sim[i] <- rmvnorm()
}
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- matrix(0, nrow=2, ncol=50)
for (i in seq_along(sigma_N)) {
y <- mvrnorm(N=1, rep(0, 3), Sigma[1:3, 1:3] + sigma_N[i]*identity(3))
cond_mu <- sigma_N[i] * Sigma_star.T %*% y
cond_Sigma <- Sigma - sigma_N[i] * Sigma_star.T %*% Sigma_star
cond_sim[i] <- rmvnorm()
}
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- matrix(0, nrow=2, ncol=50)
for (i in seq_along(sigma_N)) {
y <- mvrnorm(n=1, rep(0, 3), Sigma[1:3, 1:3] + sigma_N[i]*identity(3))
cond_mu <- sigma_N[i] * Sigma_star.T %*% y
cond_Sigma <- Sigma - sigma_N[i] * Sigma_star.T %*% Sigma_star
cond_sim[i] <- rmvnorm()
}
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- matrix(0, nrow=2, ncol=50)
for (i in seq_along(sigma_N)) {
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma[1:3, 1:3] + sigma_N[i]*identity(3)))
cond_mu <- sigma_N[i] * Sigma_star.T %*% y
cond_Sigma <- Sigma - sigma_N[i] * Sigma_star.T %*% Sigma_star
cond_sim[i] <- rmvnorm()
}
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- matrix(0, nrow=2, ncol=50)
for (i in seq_along(sigma_N)) {
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma[1:3, 1:3] + sigma_N[i]*identity(3)))
cond_mu <- sigma_N[i] * T(Sigma_star) %*% y
cond_Sigma <- Sigma - sigma_N[i] * T(Sigma_star) %*% Sigma_star
cond_sim[i] <- rmvnorm()
}
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- matrix(0, nrow=2, ncol=50)
for (i in seq_along(sigma_N)) {
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma[1:3, 1:3] + sigma_N[i]*identity(3)))
cond_mu <- sigma_N[i] * t(Sigma_star) %*% y
cond_Sigma <- Sigma - sigma_N[i] * t(Sigma_star) %*% Sigma_star
cond_sim[i] <- rmvnorm()
}
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- matrix(0, nrow=2, ncol=50)
for (i in seq_along(sigma_N)) {
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma[1:3, 1:3] + sigma_N[i]*identity(3)))
cond_mu <- sigma_N[i] * t(Sigma_star) %*% y
print(cond_mu)
cond_Sigma <- Sigma - sigma_N[i] * t(Sigma_star) %*% Sigma_star
cond_sim[i] <- rmvnorm()
}
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- matrix(0, nrow=2, ncol=50)
for (i in seq_along(sigma_N)) {
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma[1:3, 1:3] + sigma_N[i]*identity(3)))
cond_mu <- sigma_N[i] * t(Sigma_star) %*% y
cond_Sigma <- Sigma - sigma_N[i] * t(Sigma_star) %*% Sigma_star
print(cond_Sigma)
cond_sim[i] <- rmvnorm()
}
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- matrix(0, nrow=2, ncol=50)
for (i in seq_along(sigma_N)) {
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma[1:3, 1:3] + sigma_N[i]*identity(3)))
cond_mu <- sigma_N[i] * t(Sigma_star) %*% y
cond_Sigma <- Sigma - sigma_N[i] * t(Sigma_star) %*% Sigma_star
cond_sim[i] <- rmvnorm(n=1, cond_mu, cond_Sigma)
}
Sigma <- variance[2]*matern(dist_matrix, matern_a, nu_values[2])
sigma_N <- c(0, 0.25)
Sigma_star <- Sigma[1:3, ]
cond_sim <- matrix(0, nrow=2, ncol=50)
for (i in seq_along(sigma_N)) {
y <- as.vector(mvrnorm(n=1, rep(0, 3), Sigma[1:3, 1:3] + sigma_N[i]*identity(3)))
cond_mu <- sigma_N[i] * t(Sigma_star) %*% y
cond_Sigma <- Sigma - sigma_N[i] * t(Sigma_star) %*% Sigma_star
cond_sim[i] <- rmvnorm(n=1, cond_mu, cond_Sigma)
cond_sim[1]
}
