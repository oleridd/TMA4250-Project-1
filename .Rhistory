# exp_realizations[(i-1)%%2 + (j-1)] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
print((i-1)%%2 + j-1)
# exp_realizations[(i-1)%%2 + (j-1)] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
print(i%%2 + j-1)
# exp_realizations[(i-1)%%2 + (j-1)] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
print(i%%2 + j)
# exp_realizations[(i-1)%%2 + (j-1)] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
print(i%%2 + i*j)
# exp_realizations[(i-1)%%2 + (j-1)] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
print((i-1)%%2 + (i-1)*(j-1)+1)
# exp_realizations[(i-1)%%2 + (j-1)] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
print((i-1)%%2 + (i)*(j-1) + 1)
# exp_realizations[(i-1)%%2 + (j-1)] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
print(j + 2*(i-1)%%2)
# exp_realizations[(i-1)%%2 + (j-1)] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
exp_realizations[2*(i-1)%%2 + j] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
v <- exp_realizations[1]
v <- exp_realizations[, 1]
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
v <- exp_realizations[, 1]
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
exp_realizations[2*(i-1)%%2 + j] <- as.matrix(mvrnorm(n=N, mu, Sigma))
}
}
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
print(exp_realizations[1:2, , ])
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
exp_realizations[2*(i-1)%%2 + j] <- as.matrix(mvrnorm(n=N, mu, Sigma))
}
}
print(exp_realizations[, , ])
print(exp_realizations[, , 1:2)
print(exp_realizations[, , 1:2])
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
# print(exp_realizations[, , 1:2])
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
exp_realizations[2*(i-1)%%2 + j, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
print(exp_realizations)
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
plot(matern_realizations[1, 1,])
plot(matern_realizations[1, 1:2,])
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
}
}
exp_realizations[1][2]
plot_1 <- ggplot() + geom_point(aes(x=s, y=exp_realizations[1, 1, ]))
plot_1
plot_1 <- ggplot() + geom_point(aes(x=s, y=exp_realizations[1, 1:4, ]))
plot_1
knitr::opts_chunk$set(echo = TRUE)
# install.packages("geoR")
# install.packages("akima")
# install.packages("fields")
# install.packages("ggplot2")
# install.packages("MASS")
library(geoR)
library(akima)
library(fields)
library(ggplot2)
library(MASS)
powered_exponential <- function(h, a, alpha) {
# Powered exponential correlation function as defined in lectures
return(
exp(-(h/a)^alpha)
)
}
matern_modified <- function(h, a, nu) {
# Matern correlation function as defined in lectures (based on matern from geoR)
phi <- a/sqrt(8*nu)
return(
matern(h, phi, nu)
)
}
s <- c(1:50)
N <- 4
variance <- c(1, 5)
array_dims <- c(4, 4, length(s)) # Dimensions of the data-array to be plotted
dist_matrix <- as.matrix(dist(s, diag=TRUE, upper=TRUE))
mu <- rep(0, length(s))
part(mfrow=c(2, 4))
par(mfrow=c(2, 4))
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ])
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ])
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ])
}
}
}
?plot
?plot
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
par(mfrow=c(2, 4))
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1])
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
?plot
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1])
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1],
main=paste("Exp with variance ", variance[i], " and alpha "))
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
?plot
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1],
main=paste("Exp with variance ", variance[i], " and alpha "))
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu_values[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Exp with variance ", variance[i], " and alpha "), cex=1)
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu_values[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Exp with variance ", variance[i], " and alpha "), cex=0.2)
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu_values[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)", cex=0.2,
main=paste("Exp with variance ", variance[i], " and alpha "))
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu_values[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
x11(width=20, height=4)
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)", cex=0.2,
main=paste("Exp with variance ", variance[i], " and alpha "))
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu_values[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
x11(width=20, height=4)
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)", cex=0.2,
main=paste("Exp with variance ", variance[i], " and alpha "))
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu_values[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
par(mfrow=c(2, 4))
x11(width=20, height=4)
colors <- c("darkred", "darkblue", "darkgreen", "darkmagenta")
alpha <- c(1, 1.9)
exp_a <- 10
exp_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(alpha)) {
Sigma <- variance[i]*powered_exponential(dist_matrix, exp_a, alpha[j])
flattened_index <- 2*(i-1)%%2 + j
exp_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, exp_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)", cex=0.2,
main=paste("Exp with variance ", variance[i], " and alpha "))
for (k in 2:N) {
lines(s, exp_realizations[flattened_index, k, ], col=colors[k])
}
}
}
nu_values <- c(1, 3)
matern_a <- 10
matern_realizations <- array(rep(0, prod(array_dims)), array_dims)
for (i in seq_along(variance)) {
for (j in seq_along(nu_values)) {
Sigma <- variance[i]*matern(dist_matrix, matern_a, nu_values[j])
flattened_index <- 2*(i-1)%%2 + j
matern_realizations[flattened_index, , ] <- as.array(mvrnorm(n=N, mu, Sigma))
plot(s, matern_realizations[flattened_index, 1, ], type="lines", col=colors[1], ylab="X (simulated)",
main=paste("Matern with variance", variance[i], " and nu ", nu_values[j]))
for (k in 2:N) {
lines(s, matern_realizations[flattened_index, k, ], col=colors[k])
}
}
}
